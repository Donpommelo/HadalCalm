name: Build and Deploy to EC2 and Create AMI

on:
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    name: Build and Deploy Server to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Build jar
      run: ./gradlew server:jar

    - name: Fix file names
      run: mv server/build/lib/*.jar HadalServer.jar

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Start EC2 Instance
      run: |
        INSTANCE_ID=i-014cd9c2ccb5bf61f
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        aws ec2 start-instances --instance-ids $INSTANCE_ID
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        
    - name: Get EC2 Public IP
      run: |
        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids ${{ env.INSTANCE_ID }} \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
        echo "Public IP: $PUBLIC_IP"

    - name: Clean up old files
      uses: appleboy/ssh-action@v1.2.0
      with:
          host: ${{ env.PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to the project directory, or create it if it doesn't exist
            mkdir -p ~/project && cd ~/project
            rm -rf ./*
          
    - name: Upload JAR to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ env.PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: HadalServer.jar
        target: ~/project

    - name: Set up JDK 21 for the Instance
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ env.PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Install Java (OpenJDK 21)
          sudo yum install -y java-21-amazon-corretto-devel

    - name: Create AMI
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ env.PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 300
        script: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          AMI_NAME="HadalServerAMI_$TIMESTAMP"
          IMAGE_ID=$(aws ec2 create-image \
          --instance-id ${{ env.INSTANCE_ID }} \
          --name "$AMI_NAME" \
          --query 'ImageId' \
          --output text)
          echo "Waiting for AMI creation to finish... $IMAGE_ID $AMI_NAME"
          IMAGE_STATUS=$(aws ec2 describe-images --image-ids $IMAGE_ID --query "Images[0].State" --output text)
          while [ "$IMAGE_STATUS" != "available" ]; do
            echo "AMI is in state: $IMAGE_STATUS, waiting..."
            sleep 30
            IMAGE_STATUS=$(aws ec2 describe-images --image-ids $IMAGE_ID --query "Images[0].State" --output text)
          done
          echo "AMI creation complete."
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.beryx:badass-runtime-plugin:1.12.4"
    }
}

apply plugin: 'application'
apply plugin: 'org.beryx.runtime'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
sourceSets.main.java.srcDirs = [ "src/" ]
mainClassName = 'com.mygdx.hadal.desktop.DesktopLauncher'
sourceCompatibility = 16.0

project.ext.assetsDir = new File("../core/assets")

dependencies {
    implementation project(":core")
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
}

import org.gradle.internal.os.OperatingSystem

run {
    workingDir = rootProject.file('assets').path
    setIgnoreExitValue(true)

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run LWJGL3 Java apps on MacOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

jar {
    archiveFileName = "${appName}.jar"
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    destinationDirectory = file("$buildDir/lib")
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude('linux/arm32/**', 'linux/arm64/**', 'META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')

    from files(project.assetsDir)

//    project.delete("../core/assets/save/ChatLog.json")
//    project.delete("../core/assets/save/Loadout.json")
//    project.delete("../core/assets/save/Keybind.json")
//    project.delete("../core/assets/save/Record.json")
//    project.delete("../core/assets/save/Settings.json")
//    project.delete("../core/assets/err.txt")

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

task proguard(type: proguard.gradle.ProGuardTask) {
    outputs.upToDateWhen { false }
    configuration 'proguard-rules.pro'
    libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'

    injars "build/lib/${appName}-Demo.jar"
    outjars "build/lib/${appName}.jar"
}

proguard.dependsOn jar
jpackageImage.dependsOn jar

runtime {
    options = ['--strip-debug',
               '--compress', '2',
               '--no-header-files',
               '--no-man-pages',
               '--strip-native-commands',
               '--vm', 'server']
    modules = ['java.base' ,
               'java.desktop',
               'java.logging',
               'java.sql',
               'java.xml',
               'jdk.unsupported']
    distDir = file(buildDir)

    jpackage {
        mainJar = "${appName}.jar"
        imageName = appName
        appVersion = "1.0.0"

        if (OperatingSystem.current().isWindows()) {
            imageOptions = ["--icon", file("../icons/icon.ico")]
        } else if (OperatingSystem.current().isLinux()) {
            imageOptions = ["--icon", file("../icons/icon.png")]
        } else if (OperatingSystem.current().isMacOsX()) {
            imageOptions = ["--icon", file("../icons/icon.icns")]
            jvmArgs += "-XstartOnFirstThread"
        }
    }
}

jpackageImage.doLast {
    file("build/jpackage/HadalCalm/app/${appName}-Demo.jar").delete()
}